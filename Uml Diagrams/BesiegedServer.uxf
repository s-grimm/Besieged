<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="12.0">
  <zoom_level>10</zoom_level>
  <element>
    <type>com.umlet.element.Class</type>
    <coordinates>
      <x>1050</x>
      <y>270</y>
      <w>320</w>
      <h>100</h>
    </coordinates>
    <panel_attributes>*&lt;&lt;Framework.ServiceContracts.IClient&gt;&gt;*
--
--
Notify(message: string): void
--
*Comments*
-- Provides a mechanism for the server to notify 
the client with new messages
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <type>com.umlet.element.custom.Text</type>
    <coordinates>
      <x>1180</x>
      <y>400</y>
      <w>260</w>
      <h>30</h>
    </coordinates>
    <panel_attributes>ConnectedClients // *CHANGING THIS*</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <type>com.umlet.element.Class</type>
    <coordinates>
      <x>1000</x>
      <y>460</y>
      <w>570</w>
      <h>330</h>
    </coordinates>
    <panel_attributes>*BesiegedGameInstance*
--
-m_Colors: List&lt;Color&gt; = new List&lt;Color&gt;() // *CHANGING THIS*
+ConnectedClients: BlockingCollection&lt;ConnectedClient&gt;
+MessageQueue: BlockingCollection&lt;Command&gt;
+GameId: string
+Name: string
+MaxPlayers: int
+GameCreatorClientId: string
+Password: string
+GameState: GameState
--
+BesiegedGameInstance()
+BesiegedGameInstance(gameId: string, name: string, maxPlayers: int)
+BesiegedGameInstance(gameId: string, name: string, maxPlayers: int, password: string)
+StartProcessingMessages(): void
+ProcessMessage(command: Command): void
--
*Comments*
-- Represents an individual and self contained instance of the running game
-- Can communicate with the unique clients connected to the game</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <type>com.umlet.element.Class</type>
    <coordinates>
      <x>220</x>
      <y>100</y>
      <w>490</w>
      <h>100</h>
    </coordinates>
    <panel_attributes>*&lt;&lt;Framework.ServiceContracts.IBesiegedServer&gt;&gt;*
--

--
SendCommand(serializedCommand: string): void
--
*Comments*
-- Service contract interface for the Duplex Channel client/server connection</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <type>com.umlet.element.Class</type>
    <coordinates>
      <x>50</x>
      <y>260</y>
      <w>830</w>
      <h>310</h>
    </coordinates>
    <panel_attributes>*BesiegedServer*
{[ServiceBehavior(InstanceContextMode = InstanceContextMode.Single)]}
--
-m_MessageQueue: BlockingCollection&lt;Command&gt; = new BlockingCollection&lt;Command&gt;()
-m_ConnectedClients: ConcurrentDictionary&lt;string, IClient&gt; = new ConcurrentDictionary&lt;string, IClient&gt;()
-m_Games: ConcurrentDictionary&lt;string, BesiegedGameInstance&gt; = new ConcurrentDictionary&lt;string, BesiegedGameInstance&gt;()
-m_IsServerInitialized: bool = false
-m_ServerCallback: IClient
--
+BesiegedServer()
-StartProcessingMessages(): void
+NotifyAllConnectedClients(command: string): void
+NotifyClient(clientId: string, command: string): void
+ProcessMessage(command: Command): void
+SendCommand(serializedCommand: string): void

--
*Comments*
-- Used as the central access point for any clients to communicate message to and from the server
-- Employs a message queue to handle messages in a timely manner and distribute them to the appropriate clients and games</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <type>com.umlet.element.Relation</type>
    <coordinates>
      <x>850</x>
      <y>310</y>
      <w>220</w>
      <h>50</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>30;30;200;30</additional_attributes>
  </element>
  <element>
    <type>com.umlet.element.Relation</type>
    <coordinates>
      <x>1150</x>
      <y>340</y>
      <w>50</w>
      <h>140</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>30;120;30;30</additional_attributes>
  </element>
  <element>
    <type>com.umlet.element.custom.Text</type>
    <coordinates>
      <x>900</x>
      <y>300</y>
      <w>200</w>
      <h>40</h>
    </coordinates>
    <panel_attributes>m_ConnectedClients
m_ServerCallback</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <type>com.umlet.element.Relation</type>
    <coordinates>
      <x>450</x>
      <y>170</y>
      <w>50</w>
      <h>110</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>30;30;30;90</additional_attributes>
  </element>
</diagram>
